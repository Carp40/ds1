#+TITLE: NOTEBOOK - INTRODUCTION TO DATA SCIENCE
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: DSC 105 Data Structures Lyon College Fall 2024
#+STARTUP: overview hideblocks indent entitiespretty:
#+PROPERTY: header-args:R :session *R* :results output :exports both
* Week 0 - Orientation ([[https://github.com/birkenkrahe/ds1/blob/main/org/0_overview.org][GitHub]])

#+attr_html: :width 300px:
[[../img/difficulty.png]]

/Image:/ comparing the expected difficulty (smooth curve) to the actual
difficulty (step function) of a class or of a technical book.

What did we achieve: Just a little overview and exposure to Linux and
Emacs using the Google Cloud Shell platform (while waiting for Lyon's
Linux server). See also: review questions in week 2.

* Week 1 - Infrastructure Injection
#+attr_html: :width 600px:
[[../img/penguins.jpg]]

- *DataCamp:* make sure that you subscribe to my workspace, and that you
  can see the assignments. Where can you find the invitation link?
  #+begin_quote
  The link was posted in Google Chat and you can find it in Canvas in
  the Wiki page "Course links".
  #+end_quote

- *Project:* published [[https://lyon.instructure.com/courses/2628/assignments/32556][1st sprint review instructions]] - get to work!
  #+begin_quote
  1) Pick a team
  2) Pick a topic (or topics)
  3) Write a proposal
  4) Submit your proposal
  #+end_quote

- *Review questions from week 1*

- *Getting started with infrastructure*:
  1. [X] Linux exercise (to be finished)
  2. [X] Emacs tutorial
  3. [ ] Datalab demo

** Review questions (Week 1):

1. What are my views on using generative AI when learning how to code?
   #+begin_quote
   "Don't do it." For the long version, see my pamphlet "[[https://github.com/birkenkrahe/org/blob/master/fall24/UsingAItoCode.org][About [not]
   Using AI to Write Code For You]]"
   #+end_quote
2. What does IMRaD stand for and why is it relevant to us?
   #+begin_quote
   - "Introduction, Method, Results, and Discussion" is the standard
     format of scientific publications.
   - Our project sprint reviews follow IMRaD: in each sprint, one of
     these is the central concern.
   #+end_quote
3. What's the purpose of a sprint review in Scrum?
   #+begin_quote
   Presentation of a prototype, which is whatever the project team has
   created by then (perhaps nothing). It's not the same as a milestone
   (which is a date at which a particular result is expected).
   #+end_quote
4. Which of these do not apply to the projects in this course:
   - [X] Use a project from another course in this class.
   - [X] Explore a dataset of your choice that you are curious about.
   - [X] Explore an R or Python package of your choice.
   - [X] Complete a DataCamp competition and report on it.
   - [X] Create a demo that your audience can participate in.
5. True or false? Does this course have a final exam?
   #+begin_quote
   Yes it does but it's optional: you only have to write the final
   exam if you're unhappy with your grade and want to improve it. If
   your final exam result is worse than your final grade up to that
   point, it won't be counted.
   #+end_quote
6. True or false? You can complete your DataCamp assignments any time.
   #+begin_quote
   True - but you will suffer a 50% point loss for late completion.
   #+end_quote
7. What is "Google Cloud Shell"?
   #+begin_quote
   A free cloud application that offers an editor (looks like VSCode)
   and a command-line or shell program. Allows 50 hours computing time
   per week and 5GB of space. The Emacs installation is permanent, the
   installation of R, alas, is not.
   #+end_quote
8. What does =sudo apt install emacs= mean?
   #+begin_quote
   1. =sudo=: gives you admin rights for what follows, requires passwprd
   2. =apt=: package manager program for Debian-like Linux distros
   3. =install=: install the following program (if it can be found)
   #+end_quote
9. What is =wget=?
   #+begin_quote
   GNU =wget= is a non-interactive network downloader. It's one of many
   GNU utilities that Linux uses. =wget= works in the background. Check
   out [[https://www.man7.org/linux/man-pages/man1/wget.1.html][the manual page online]] (or in Linux).
   #+end_quote
10. What are the advantages of DataCamp assignments?
    #+begin_quote
    - The assignments are online & asynchronous (do them when you want)
    - The lessons (often) come with videos and textbook material
    - You can practice what you've learnt (5 questions per day)
    - You can work through DataCamp on the desktop or on your phone
    - You can use completed courses to get internships and work
    - You can use [[https://datacamp.com/datalab][DataLab]] as an interactive notebook (similar to Emacs)
    #+end_quote

** Finish Google Cloud Shell exercise ([[https://github.com/birkenkrahe/ds1/blob/main/org/1_infrastructure_Google_Cloud_Shell.org][GitHub]])

Head over to =shell.cloud.google.com=. You should get to the terminal
right away. Move the editor out of the way, then continue the
exercise to the end:

1. Install Google Cloud Shell app using Chrome: login, and then:
   =Settings > Save and Share > Install page as app=
3. Emacs is actually pre-installed.
4. Install R
5. Open Emacs
6. Create an Org-mode file
7. Run R
8. Close Emacs
9. Watch your quota (50 hours/week)

** Review questions: GitHub Hello World Project

1. What is the purpose of Git, and who created it?
   #+begin_quote
   Controlling the main ("productive") version of a software in the
   presence of potentially many collaborators who work on that
   software at the same time. Git's creator is Linus Torvalds, who
   also wrote the (first) Linux kernel (on top of GNU).
   #+end_quote

2. What does it mean that a repo is =public= or =private=, and who can
   make changes in your repos?
   #+begin_quote
   Private repos can also be accessed by collaborators, which you need
   to invite using their email. Public repos are visible to
   everyone. Nobody can make direct changes in any of your repos -
   changes are applied to Git repos via =merge=.
   #+end_quote

4. What is the purpose of a =pull= request in GitHub?
   #+begin_quote
   A =pull= request is a request for the maintainer of the main branch
   to consider incorporating your changes into the main code base.
   #+end_quote

5. How do you finalize and merge a pull request?
   #+begin_quote
   To finalize and merge a =pull= request, view the =pull= request, and if
   there are no conflicts, click on the =Merge pull request= button, and
   then confirm the merge.
   #+end_quote

6. What can you do with someone else's GitHub public repository?
   #+begin_quote
   - You can watch it (get notifications if there are changes).
   - You can fork it to your own organization (make a copy in GitHub).
   - You can clone it (create a remote copy on your PC).
   #+end_quote

** Review questions: Understanding data science

1. What role would be expected to build a sales data dashboard in a company?
   #+begin_quote
   Data analyst.
   #+end_quote
2. What role would be expected to build a predictive model based on
   customer data?
   #+begin_quote
   Data scientist.
   #+end_quote
3. What role would be expected to collect and prepare data from the
   factory floor for analysis?
   #+begin_quote
   Data engineer.
   #+end_quote
4. You've collected sales and weather data for a restaurant. What kind
   of predictions might be possible using machine learning?
   #+begin_quote
   1. *Sales forecasting* based on historical sales data, weather
      patterns and factors like holidays. Helps with inventory
      management, staffing, planning promotions.
   2. *Customer numbers expected* on a given day or time based on
      weather conditions, time of day, day of the week. Optimize
      staffing levels, improve customer service.
   3. *Demand prediction* for specific menu items dependent on weather
      or time of year or day. Optimize inventory management and menu
      planning.
   4. *Promotion effectiveness*: predict how different weather
      conditions might affect the success of promotions or discounts.
   5. *Seasonal trend analysis*: analyse and predict seasonal trends in
      sales (e.g. during summer months or special events).
   6. *Customer satisfaction* prediction (like ratings) based on past
      trends during similar conditions.
   7. *Impact of external events*: predict how local festivals, sporting
      events in conjunction with weather conditions affect business.
   8. *Dynamic pricing models*: implement dynamic pricing based on
      historical events (summer/winter prices, festival prices etc.)
   9. *Predicting supply chain disruptions*: correlate adverse weather
      and other external events to predict potential supply issues.
   10. *Operational efficiency prediction*: Predict restaurant's utility
       usage (electricity, heating, cooling) based on weather data and
       customer numbers.
   #+end_quote
5. How does the data science pipeline or workflow look like?
   #+attr_html: :width 600px:
   [[../img/2_ds_workflow.png]]

** Start: Birkenkrahe's Emacs Tutorial ([[https://github.com/birkenkrahe/ds1/blob/main/org/1_infrastructure_Emacs.org][GitHub]])

1. You'll get a handout. Online: [[https://tinyurl.com/emacs-tutor][tinyurl.com/emacs-tutor]].
2. Code along with me using Emacs in the cloud.
3. Finish at home if necessary.

Note: You need to install Google Cloud Shell as an app in order to
have all keybindings in Emacs (esp. =C-v= and =C-n=).

* Week 2 - DataLab & Data Collection and Storage
#+attr_html: :width 400px:
[[../img/2_pythagoras.jpg]]

Plan:
- [X] *Next DataCamp lesson (and Quiz 1) due August 30*
- [X] Datalab demo in DataCamp (interactive) - 15 min
- [ ] We have the Linux server! You've all got accounts.
- [ ] Introduction to data science (lecture) - 30 min
- [ ] Introduction to R (lecture/practice) - 60 min

** Datalab demo (GitHub)

DataCamp's DataLab and Google's Colab or RStudio are alternatives to
Emacs + Org-mode that you want to know about (and also so that you can
appreciate what our infrastructure brings to the table).

You'll get a handout of the exercise (PDF), and [[https://www.datacamp.com/datalab/w/64260e9e-2c3c-4e6b-be4b-2dc6bac45d93/edit][here is my notebook]].

** Linux server has arrived

- You should have received your VM server address and password

- Start "Remote Desktop Protocol" on your (Windows) PC

- Enter the server name (e.g. =cslinux01.lyon.edu=) => =Connect=

- Login the =Xorg= session with username = =firstname.lastname= and pw

- Do not shut down or log out of the VM but only close the window

- Download config file with =wget -O .emacs https://tinyurl.com/lyon-emacs=

- Start Emacs and install ESS package with =list-packages= followed by =i=
  and =x= with the cursor on the line of the =ess= package

- To test, create a sample R file =testR.org= with a code block (create
  with =<s <TAB>=) and run it (with =C-c C-c=):
  #+begin_example
  #+property: header-args:R :session *R* :results output
  * Sample file
    #+begin_src R
      str(mtcars)
    #+end_src
  #+end_example

** Review questions (DataLab & Linux)

1. Which languages does dataLab support?
   #+begin_quote
   R, Python, SQL
   #+end_quote

2. How many languages are supported in a single Jupyter notebook?
   #+begin_quote
   One high level language (R or Python), and SQL to connect to
   relational databases.
   #+end_quote

3. How can you change the notebook language?
   #+begin_quote
   You must changed the runtime =Environment=.
   #+end_quote

4. Which shell are you using when you work in dataLab?
   #+begin_quote
   The IPython ("Interactive Python") shell, made popular by the
   Jupyter notebook application (see also "Jupyter Lab")
   #+end_quote

5. What's the difference between dataLab, Google Colab, RStudio, and
   Emacs Org-mode?
   #+begin_quote
   - Emacs, RStudio, DataLab give you terminal access
   - Colab, RStudio, Datalab all work with IPython (.ipynb)
   - Emacs Org-mode provides portable plain-text files
   #+end_quote

6. What are these: Emacs, Org-mode, Linux, R?
   #+begin_quote
   1) Emacs: an editor
   2) Org-mode: a file mode (.org) to write and run source code files
   3) Linux: an operating system (running on a virtual machine)
   4) R: a statistical programming language
   #+end_quote

7. Which software do you need to run R inside Emacs (as in =testR.org=)?
   #+begin_quote
   1. Emacs installed (with =sudo apt install emacs=)
   2. R installed (with =sudo apt install r-base=)
   3. ESS package installed in Emacs (with =M-x list-packages=)
   4. =.emacs= file downloaded (with =wget= from tinyurl.com/lyon-emacs)
   #+end_quote

8. How can you configure an =.org= file so that all code blocks in that
   file can execute R code via an R console in the background?
   #+begin_quote
   Add this at the top:

   =#+PROPERTY: header-args:R :session **R** :results output=

   Either run it with =C-c C-c= ("Local setup refreshed"), or re-open
   the file (it is read whenever the file is being opened).
   #+end_quote

9. When you create an Org-mode file in your home directory (=~/=) and
   run an R code block inside it - which directory is R using?
   #+begin_quote
   R is looking at the location where it was first started or to which
   it was set using the =setwd= function. If there is no other R
   session, then R is using =~/= because that's where the file is
   located.
   #+end_quote

** Review questions (DataCamp - Data Collection and Storage)

1) What's an API?
   #+begin_quote
   API stands for Application Programming Interface, a protocol or set
   of instructions to request data over the Internet. If an
   organization does not offer an API, you cannot (legally) access its
   applications, e.g. databases.
   #+end_quote

2) Does X (formerly Twitter) have a public API and what's it good for?
   #+begin_quote
   Free access to the X API is limited since April 2023 but developers
   can still access it if they're on an X subscription plan.

   The API allows access to various X features such as: reading and
   posting tweets (via bot apps), tracking/following users, sending
   direct messages, etc. See https://developer.x.com/en

   X API: could be a project!
   #+end_quote

3) What could you do with the data obtained from X?
   #+begin_quote
   - Perform a "sentiment analysis" on the text of each tweet,
     e.g. automatically check if a tweet is positive or negative.
   - Count how many times a word, or a hashtag (=#birkenkrahe=) appears
     each week.
   - Combine sentiment analysis and hashtag counts to check if
     positive tweets are correlated with more customers or more views.
   #+end_quote

4) What are the main categories of data and how do they differ from one another?
   #+begin_quote
   The two main types of data are **quantitative** and
   **qualitative**. Quantitative data deals with numbers and can be
   measured, while qualitative data deals with descriptions and can be
   observed but not measured (directly).

   Either of these data types can be structured/stored as image, text,
   geospatial, network data. Example: text data are qualitative
   (content) and have to be converted to quantitative data (tokens)
   for analysis and processing.
   #+end_quote

5) What do you need to consider when storing data?
   #+begin_quote
   - Location (e.g. parallel storage solutions or the cloud, or locally)
   - Data category (e.g. unstructured or tabular)
   - Retrieval (e.g. NoSQL for document (collection-based), or SQL for
     relational (table-based) databases.
   #+end_quote

6) What's a query language? What's an example?
   #+begin_quote
   A language to articulate data queries, for example querying a table
   in a relational database management system using SQL, as in the
   query: =SELECT customer_name FROM customers;=
   #+end_quote

7) What are the top cloud providers in the world?
   #+begin_quote
   - Amazon with Amazon Web Services (AWS)
   - Microsoft with Azure
   - Alphabet with Google Cloud (as in "Google Cloud Shell")
   #+end_quote

8) What does it mean to "scale data storage"?
   #+begin_quote
   When collecting large amounts of different types data from multiple
   sources, the "scaling" question is "how much, what type, and how
   fast"? If an application (e.g. for storage) scales, it can store
   small and (arbitrarily) large data volumes. To scale, technology
   either has to be invented or adapted - with computers, scale always
   comes at a price.
   #+end_quote

9) What's a "data pipeline"?
   #+begin_quote
   A data pipeline is a workflow, a prescribed series of steps or
   stages that is used to retrieve, load, and store data, to better
   control individual steps and (ideally) automate the entire process.

   The term "pipeline" is used whenever segments are combined so that
   the output of the previous segment is the input of the next,
   e.g. in the following shell command, which pipes the string into a
   file and then counts the characters of the string:
   #+end_quote
   Example in a =bash= code block:
   #+begin_src bash :results output
     echo "Hello" | tee hello.txt |  wc -c
     cat hello.txt
   #+end_src

   #+RESULTS:
   : 6
   : Hello

10) What's "ETL" and how is it used (think of an example)?
    #+begin_quote
    - ETL stands for the "Extract", "Transform", "Load" data pipeline.
    - Example: autonomous vehicle operation:
      1. Retrieve real-time traffic data (e.g. "rain", "stop sign")
      2. Transform retrieved data for analysis (e.g. create table)
      3. Load transformed data into container (e.g. SQLite database)
    - When an ETL pipeline is well set up, it can be automated. In the
      case of automated vehicles, operation otherwise wouldn't be
      possible.
    #+end_quote

* Week 3 - Introduction to data science
#+attr_html: :width 600px:
[[../img/frankenstein.jpeg]]

- [X] Quiz 2 is live - complete it by Friday September 6, 11:59 PM
- [ ] Enter project team & idea in Canvas ([[https://lyon.instructure.com/courses/2628/pages/add-your-project-here][wiki]]) by Friday 11 AM
- [ ] Lecture: Introduction to Data Science / skills / jobs

** Recap of last week

- I watched the Zoom recording and checked the Whiteboard screenshots.

- Do you know how to find the Zoom recording and the Whiteboard
  screenshots?

- You need to just know simple definitions (especially if you list
  them in your resume), like: Linux, R, Emacs, Data Science etc.

- Can you write a shell pipeline command? How about counting the
  number of files in your current directory? Remember: =ls= lists files,
  =wc -l= counts lines.
  #+begin_src bash :results output :exports both
    ls | wc -l
  #+end_src


** Review: "Preparation, Exploration, Visualization"

1. Why is data preparation important in data science?
   #+begin_quote
   To prevent errors, incorrect results, and bias in algorithms.
   #+end_quote
   Code example:
   #+begin_src R :session *R* :results output :exports both
     df <- read.csv("../data/cleaning.csv") # read CSV data into data frame
     str(df)  # structure of data frame
     df
   #+end_src

   #+RESULTS:
   #+begin_example
   'data.frame':	4 obs. of  4 variables:
    $ Name   : chr  "Sara" "Lis" "Hadrien" "Lis"
    $ Age    : int  27 30 NA 30
    $ Size   : num  1.77 5.58 1.8 5.58
    $ Country: chr  "Belgium" "USA" "FR" "USA"
        Name Age Size Country
   1    Sara  27 1.77 Belgium
   2     Lis  30 5.58     USA
   3 Hadrien  NA 1.80      FR
   4     Lis  30 5.58     USA
   #+end_example

   #+begin_src R :session *R* :results output :exports both
     df$Country[1] <- "BE"  # change to country code
     df$Size[df$Size==5.58] <- 1.70  # change inches to meters
     str(df)
   #+end_src

2. What is the purpose of removing duplicates in a dataset?
   #+begin_quote
   To ensure that each observation (row) is unique.
   #+end_quote
   Code example:
   #+begin_src R :session *R* :results output :exports both
     df      # original data frame with duplicate row
     df[-4,] -> df   # duplicate row removed
     df
   #+end_src

   #+RESULTS:
   :      Name Age Size Country
   : 1    Sara  27 1.77 Belgium
   : 2     Lis  30 5.58     USA
   : 3 Hadrien  NA 1.80      FR
   : 4     Lis  30 5.58     USA
   :      Name Age Size Country
   : 1    Sara  27 1.77 Belgium
   : 2     Lis  30 5.58     USA
   : 3 Hadrien  NA 1.80      FR

3. What are methods to handle missing values?
   #+begin_quote
   Impute (replace, e.g. by an average), drop, or keep
   #+end_quote
   Code example:
   #+begin_src R :session *R* :results output :exports both
     df
     df$Age[Name="Hadrien"]  # extract third element of "Age" column
     df$Age[3]
     df$Age[3] <- as.integer(mean(df$Age[-3])) # impute mean for missing value
     df
   #+end_src

   #+RESULTS:
   #+begin_example
        Name Age Size Country
   1    Sara  27 1.77 Belgium
   2     Lis  30 5.58     USA
   3 Hadrien  NA 1.80      FR
   [1] NA
   [1] NA
        Name Age Size Country
   1    Sara  27 1.77 Belgium
   2     Lis  30 5.58     USA
   3 Hadrien  28 1.80      FR
   #+end_example

4. What is the main goal of EDA?
   #+begin_quote
   The main goal of Exploratory Data Analysis is to explore the data,
   formulate hypotheses, and assess characteristics, e.g. about
   correlation, trends, patterns. It happens after data preparation.
   #+end_quote
   Code example:
   #+begin_src R :session *R* :results output :exports both
     summary(df) # statistical summary for the data frame df
   #+end_src

   #+RESULTS:
   :      Name                Age             Size         Country         
   :  Length:3           Min.   :27.00   Min.   :1.770   Length:3          
   :  Class :character   1st Qu.:27.50   1st Qu.:1.785   Class :character  
   :  Mode  :character   Median :28.00   Median :1.800   Mode  :character  
   :                     Mean   :28.33   Mean   :3.050                     
   :                     3rd Qu.:29.00   3rd Qu.:3.690                     
   :                     Max.   :30.00   Max.   :5.580

5. What does Anscombe's quartet illustrate in the context of EDA?
   #+begin_quote
   The Anscombe quartet shows the importance of visualizing data even
   if the statistical properties are very similar.
   #+end_quote
   Code example:
   #+begin_src R :session *R* :results output :exports both
     summary(anscombe[c("x1","x2","y1","y2")])
   #+end_src

   #+RESULTS:
   :        x1             x2             y1               y2       
   :  Min.   : 4.0   Min.   : 4.0   Min.   : 4.260   Min.   :3.100  
   :  1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.315   1st Qu.:6.695  
   :  Median : 9.0   Median : 9.0   Median : 7.580   Median :8.140  
   :  Mean   : 9.0   Mean   : 9.0   Mean   : 7.501   Mean   :7.501  
   :  3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8.570   3rd Qu.:8.950  
   :  Max.   :14.0   Max.   :14.0   Max.   :10.840   Max.   :9.260

   #+begin_src R :file ../img/anscombe.png :session *R* :results file graphics output :exports both
     par(mfrow=c(1,2), pty='s')
     plot(anscombe$x1, anscombe$y1, col="red",  pch=19) # linearly correlated
     plot(anscombe$x2, anscombe$y2, col="blue", pch=9 ) # non-linearly correlated
   #+end_src

   #+RESULTS:
   [[file:../img/anscombe.png]]

6. What does 'Knowing your data' mean?
   #+begin_quote
   1. Preview data values (=head=)
   2. View structure (=str=)
   3. Descriptive stats (=summary=)
   4. Visualize (=plot=)
   5. Look for correlations
   6. Look for outliers
   #+end_quote

7. Which picture or photo do you know that's "worth a thousand words"?
   #+attr_html: :width 400px:
   #+caption: 16-year old German soldier crying when he is captured, WWII
   [[../img/hitler_youth_crying.jpg]]

   - Others that came to my mind instantly:
     #+begin_quote
     - [[https://www.witf.io/wp-content/uploads/2020/02/iwo-jima-rosenthal-520748-1-1920x1080.jpg][Battle of Iwo Jima]]
     - [[https://www.njspotlightnews.org/wp-content/uploads/sites/123/2024/07/Donald-Trump-assassination-attempt-July-13-2024.jpg][Trump assassination]]
     - [[https://www.gannett-cdn.com/-mm-/f40f3606fa7f520417c0c9e02d7aa7a371d004ba/r=x513&c=680x510/local/-/media/USATODAY/USATODAY/2013/04/28/war-icons-003-4_3.jpg][Vietnam war]]
     #+end_quote

8. What are dashboards in data science, and what are they good for?
   #+begin_quote
   - Dashboards group relevant information in one place
   - Real-time information helps viewers to keep track
   - Dashboards can be customized to different data needs
   - Dashboards can easily be overwhelming (design issues)
   - Interactive dashboards can help extract features
   #+end_quote

9. What are dashboards definitely not good for?
   #+begin_quote
   - Data preparation, cleaning and transformation
   - Explorative Data Analysis (because they are fixed)
   #+end_quote

10. What is 'labeling' in data visualizations, and why is it important?
    #+begin_quote
    Labeling helps viewers understand what each axis, title, and legend
    represents. Units and data sources are also important.
    #+end_quote
    Code example:
    #+begin_src R :file ../img/labeling.png :session *R* :results file graphics output :exports both
      par(mfrow=c(1,2),pty='s')
      plot(mtcars$wt,mtcars$mpg) # unlabeled
      plot(mtcars$wt,mtcars$mpg,
           main="32 cars from `mtcars`",
           xlab="Weight [tons]",
           ylab="Miles-per-gallon") # labeled
    #+end_src

    #+RESULTS:
    [[file:../img/labeling.png]]

** Introduction to data science (lecture)

- [X] Data science popularity
- [X] Data science definitions
- [X] Data science skill sets
- [X] Data science jobs
- [X] Data science processes

* Week 4 - Introduction to R (9/11)
#+attr_html: :width 700px:
[[../img/Shell-Southbank-Plaza.jpg]]

- [X] Where was I on 9/11?
- [X] New quiz (25 questions) live later today
- [X] New DataCamp lessons live (Introduction to R)
- [X] Introduction to R
- [X] Project - using ~app.litmaps.com~ for references
- [X] Project - analytics is not the same as prediction
- [X] Project - proposal deadline is Friday 13 Sept 11:59 pm

** Review questions: Introduction to R (1)

1. What is CRAN and why is it important for R users?
   #+BEGIN_QUOTE
   CRAN (Comprehensive R Archive Network) is the repository where R
   and its packages are stored. It provides the official sources for
   downloading R and its libraries. Link: https://cran.r-project.org
   #+END_QUOTE   

2. What command would you use to find where the R program is on your
   system?
   #+begin_src bash :results output
     which R
   #+end_src

   #+RESULTS:
   : /usr/bin/R

3. How can you run an R script from the command line? Where will you
   see the output?
   #+begin_quote
   You can run an R script ~script.R~ with ~Rscript script.R~, or in the
   background with ~R CMD BATCH script.R~.

   ~Rscript~ will print the output to the screen (=stdout=).

   ~R CMD BATCH~ will generate a file ~script.Rout~ with the results.
   #+end_quote

** Review questions: Introduction to R (2)

1. How can you check the current directory of your R console from the
   R console? What's the difference between the two commands?

   #+begin_src R :session *R* :results output :exports both

     ## run OS/Linux command from R to get present working directory
     system("echo $PWD") 

     ## use an R function to get current working directory
     getwd()  

   #+end_src

   #+RESULTS:
   : /home/marcus/GitHub/ds1/org
   : [1] "/home/marcus/GitHub/ds1/org"

2. What's the difference between asking for help with =?= vs. =??=

   #+begin_example R

   ## open on-board help page
   ?getwd  

   ## list all help files matching `getwd` using fuzzy matching
   ??getwd

   ## `help` commands work best on R console, not in Org-mode     
   #+end_example
   
3. You're at =$HOME=, in =/home/user/=, and you want to go to
   =/home/user/org=. Will these commands work and how are they
   different?
   
   #+begin_example 

   setwd("org")  # will work if ./org exists - relative path

   setwd("/home/user/org")  # will work if $HOME/org exists - absolute path
   
   #+end_example

4. What does the following command do?

   #+begin_src R :session *R* :results output :exports both
     ## executes an OS/Linux shell command
     ## lists all files in the directory above the current directory
     ## redirects (>) the output into a file ls.txt
     ## view the ls.txt file
     ## this is NOT a pipe
     system("ls .. > ls.txt && cat ls.txt")
   #+end_src

   #+RESULTS:
   : data
   : img
   : ipynb
   : LICENSE
   : org
   : pdf
   : README.md

5. Where can you see examples for the use of R functions?

   #+begin_example R

   example(plot)  # works best on the R console (not in Org-mode)

   #+end_example

6. Which ways do you know to open an R console/shell?

   #+begin_quote

   1) Open an R shell buffer in Emacs with =M-x R=
      
   2) Open a terminal (OS shell) and open an R shell by entering =R=

   3) In an Org-mode file, activate an R code block that has a
      =:session= header argument.

   This works outside of Emacs only with interpreted languages like
   R, Python, Julia, and not with compiled languages.
         
   #+end_quote

Example in C:
#+begin_src C :main yes :includes <stdio.h> :results output
  printf("hello, Isaac");
#+end_src

#+RESULTS:
: hello, Isaac

** IN PROGRESS Introduction to R 
[[../img/3_Rlogo.png]]

- [X] Why R?
- [X] What is R?
- [X] R shell practice
- [ ] Exploring =base:options=
- [ ] R package commands
- [ ] R startup with ~~/.Rprofile~

The practice exercises are on GitHub at: [[https://tinyurl.com/intro-R-practice][tinyurl.com/intro-R-practice]]

** Summary for Introduction to R

*** Summary R shell

- R is an interpreted program with a shell (CLI/console)
- On Linux, the executable (a wrapper script) is in =/usr/bin/R=
- The R files are in =/usr/lib/R/=
- You can run R scripts in the foreground with =Rscript= or in the
  background as a "batch" job with =R CMD BATCH=.

*** Summary R environment  

- Function without arguments: ~getwd()~
- Function with arguments: ~setwd('...')~
- Absolute pathname like ~'c:/Users/birkenkrahe/'~
- Relative pathnames like ~'../../'~ ("go up by 2 levels")

*** Summary R display options

- The functions ~options~ controls display options
- You can extract display options with ~$~, e.g. ~options()$prompt~
- You can get help with the ~help~ function (or ~?~) 

*** Summary R computing and commenting

- You can print results with or without ~print~
- Create (inline) comments with ~#~ 
- ~eshell~ is a Linux-type shell in Emacs ([[https://www.gnu.org/software/emacs/manual/html_mono/eshell.html#:~:text=Eshell%20is%20a%20command%20shell,code%20is%20natural%20and%20seamless.][doc]])
- On Linux you can also use ~shell~ (M-x shell)

*** Summary of R packages

- You can install, uninstall packages and data sets in them
- You must load packages and data sets before using them
- Your current R session keeps track of all loaded objects
- Display structure, head and tail rows of loaded data sets

*** Summary R startup file

- Emacs and R have a home directory (~~/~) for startup files[fn:4]
- You can determine R's startup behavior in ~~/.Rprofile~
- ~~/.Rprofile~ is read every time a new R shell is started

* Week 5 - Arithmetic with R (SpaceX)
#+attr_html: :width 700px: 
[[../img/spacex-polaris-dawn-spacewalk.jpeg]]

/Image: SpaceX Polaris Dawn Mission - Apollo Altitude Record Reached/

- [ ] Project update 
  1. I'll upload proposal + feedback to shared drive.
  2. If you used AI for your research, you must say how & cite it.
  3. Next sprint review: Methodology. Deliverable: literature review
     (Oct 11).
  4. Using Google Docs etc. is OK but using a notebook (e.g. in
     Org-mode) makes more sense for a data science project.
     
- [ ] R package commands & practice

- [ ] Customizing at startup & practice

- [ ] Arithmetic with R

- [ ] Vectors in R
